plugins {
    id 'java'
}

group 'io.nanovc'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    // Define the Confluent Maven Repository:
    maven {
        name "Confluent"
        url "http://packages.confluent.io/maven/"
    }

}

dependencies {
    implementation group: "io.nanovc",
                   name: "nanovc-memory",
                   version: "0.0.8"

    implementation 'org.apache.kafka:kafka-clients:2.7.0'
    implementation 'org.apache.kafka:kafka-streams:2.7.0'
    implementation 'io.confluent:kafka-json-serializer:6.0.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed",
               "skipped",
               "failed"
    }
}


// We are targeting Java 8
// NOTE: We have tried setting up Multi-Release-JARS but it's still pretty complex.
//       In order to keep the code base simple, we decided to just keep the implementation
//       using JDK 8 to get the widest possible adoption.
//       The investigation included setting up Java 9 Modules etc.
//       Down the line, we will consider going down that route again but for now
//       keeping it as Java 8 is possible and makes the most sense to keep things simple.
sourceCompatibility = 14
targetCompatibility = 14


// Set the encoding:
// https://stackoverflow.com/questions/21267234/show-utf-8-text-properly-in-gradle
// https://stackoverflow.com/a/34717160/231860
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
